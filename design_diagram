digraph {
	Calculator [fillcolor=lightblue shape=box style=filled]
	AdvancedCalculator [fillcolor=lightblue shape=box style=filled]
	Calculator [fillcolor=lightblue shape=box style=filled]
	Calculator [fillcolor=lightblue shape=box style=filled]
	AdvancedCalculator [fillcolor=lightblue shape=box style=filled]
	logic_error [fillcolor=lightblue shape=box style=filled]
	domain_error [fillcolor=lightblue shape=box style=filled]
	invalid_argument [fillcolor=lightblue shape=box style=filled]
	length_error [fillcolor=lightblue shape=box style=filled]
	out_of_range [fillcolor=lightblue shape=box style=filled]
	runtime_error [fillcolor=lightblue shape=box style=filled]
	overflow_error [fillcolor=lightblue shape=box style=filled]
	underflow_error [fillcolor=lightblue shape=box style=filled]
	range_error [fillcolor=lightblue shape=box style=filled]
	unordered_map [fillcolor=lightblue shape=box style=filled]
	unordered_multimap [fillcolor=lightblue shape=box style=filled]
	CurrencyConverter [fillcolor=lightblue shape=box style=filled]
	Calculator [fillcolor=lightblue shape=box style=filled]
	AdvancedCalculator [fillcolor=lightblue shape=box style=filled]
	logic_error [fillcolor=lightblue shape=box style=filled]
	domain_error [fillcolor=lightblue shape=box style=filled]
	invalid_argument [fillcolor=lightblue shape=box style=filled]
	length_error [fillcolor=lightblue shape=box style=filled]
	out_of_range [fillcolor=lightblue shape=box style=filled]
	runtime_error [fillcolor=lightblue shape=box style=filled]
	overflow_error [fillcolor=lightblue shape=box style=filled]
	underflow_error [fillcolor=lightblue shape=box style=filled]
	range_error [fillcolor=lightblue shape=box style=filled]
	LoanCalculator [fillcolor=lightblue shape=box style=filled]
	InterestCalculator [fillcolor=lightblue shape=box style=filled]
	TaxCalculator [fillcolor=lightblue shape=box style=filled]
	unordered_map [fillcolor=lightblue shape=box style=filled]
	unordered_multimap [fillcolor=lightblue shape=box style=filled]
	CurrencyConverter [fillcolor=lightblue shape=box style=filled]
	FinancialCalculator [fillcolor=lightblue shape=box style=filled]
	Calculator [fillcolor=lightblue shape=box style=filled]
	AdvancedCalculator [fillcolor=lightblue shape=box style=filled]
	logic_error [fillcolor=lightblue shape=box style=filled]
	domain_error [fillcolor=lightblue shape=box style=filled]
	invalid_argument [fillcolor=lightblue shape=box style=filled]
	length_error [fillcolor=lightblue shape=box style=filled]
	out_of_range [fillcolor=lightblue shape=box style=filled]
	runtime_error [fillcolor=lightblue shape=box style=filled]
	overflow_error [fillcolor=lightblue shape=box style=filled]
	underflow_error [fillcolor=lightblue shape=box style=filled]
	range_error [fillcolor=lightblue shape=box style=filled]
	InterestCalculator [fillcolor=lightblue shape=box style=filled]
	Calculator [fillcolor=lightblue shape=box style=filled]
	AdvancedCalculator [fillcolor=lightblue shape=box style=filled]
	logic_error [fillcolor=lightblue shape=box style=filled]
	domain_error [fillcolor=lightblue shape=box style=filled]
	invalid_argument [fillcolor=lightblue shape=box style=filled]
	length_error [fillcolor=lightblue shape=box style=filled]
	out_of_range [fillcolor=lightblue shape=box style=filled]
	runtime_error [fillcolor=lightblue shape=box style=filled]
	overflow_error [fillcolor=lightblue shape=box style=filled]
	underflow_error [fillcolor=lightblue shape=box style=filled]
	range_error [fillcolor=lightblue shape=box style=filled]
	LoanCalculator [fillcolor=lightblue shape=box style=filled]
	Calculator [fillcolor=lightblue shape=box style=filled]
	AdvancedCalculator [fillcolor=lightblue shape=box style=filled]
	logic_error [fillcolor=lightblue shape=box style=filled]
	domain_error [fillcolor=lightblue shape=box style=filled]
	invalid_argument [fillcolor=lightblue shape=box style=filled]
	length_error [fillcolor=lightblue shape=box style=filled]
	out_of_range [fillcolor=lightblue shape=box style=filled]
	runtime_error [fillcolor=lightblue shape=box style=filled]
	overflow_error [fillcolor=lightblue shape=box style=filled]
	underflow_error [fillcolor=lightblue shape=box style=filled]
	range_error [fillcolor=lightblue shape=box style=filled]
	LoanCalculator [fillcolor=lightblue shape=box style=filled]
	InterestCalculator [fillcolor=lightblue shape=box style=filled]
	TaxCalculator [fillcolor=lightblue shape=box style=filled]
	unordered_map [fillcolor=lightblue shape=box style=filled]
	unordered_multimap [fillcolor=lightblue shape=box style=filled]
	CurrencyConverter [fillcolor=lightblue shape=box style=filled]
	Calculator [fillcolor=lightblue shape=box style=filled]
	AdvancedCalculator [fillcolor=lightblue shape=box style=filled]
	logic_error [fillcolor=lightblue shape=box style=filled]
	domain_error [fillcolor=lightblue shape=box style=filled]
	invalid_argument [fillcolor=lightblue shape=box style=filled]
	length_error [fillcolor=lightblue shape=box style=filled]
	out_of_range [fillcolor=lightblue shape=box style=filled]
	runtime_error [fillcolor=lightblue shape=box style=filled]
	overflow_error [fillcolor=lightblue shape=box style=filled]
	underflow_error [fillcolor=lightblue shape=box style=filled]
	range_error [fillcolor=lightblue shape=box style=filled]
	TaxCalculator [fillcolor=lightblue shape=box style=filled]
	Calculator -> AdvancedCalculator [label=inherits arrowhead=empty color=blue fontcolor=blue penwidth=2 style=dashed]
	logic_error -> domain_error [label=inherits arrowhead=empty color=blue fontcolor=blue penwidth=2 style=dashed]
	logic_error -> invalid_argument [label=inherits arrowhead=empty color=blue fontcolor=blue penwidth=2 style=dashed]
	logic_error -> length_error [label=inherits arrowhead=empty color=blue fontcolor=blue penwidth=2 style=dashed]
	logic_error -> out_of_range [label=inherits arrowhead=empty color=blue fontcolor=blue penwidth=2 style=dashed]
	runtime_error -> overflow_error [label=inherits arrowhead=empty color=blue fontcolor=blue penwidth=2 style=dashed]
	runtime_error -> underflow_error [label=inherits arrowhead=empty color=blue fontcolor=blue penwidth=2 style=dashed]
	runtime_error -> range_error [label=inherits arrowhead=empty color=blue fontcolor=blue penwidth=2 style=dashed]
	Calculator -> CurrencyConverter [label=inherits arrowhead=empty color=blue fontcolor=blue penwidth=2 style=dashed]
	Calculator -> LoanCalculator [label=inherits arrowhead=empty color=blue fontcolor=blue penwidth=2 style=dashed]
	Calculator -> InterestCalculator [label=inherits arrowhead=empty color=blue fontcolor=blue penwidth=2 style=dashed]
	Calculator -> TaxCalculator [label=inherits arrowhead=empty color=blue fontcolor=blue penwidth=2 style=dashed]
	Calculator -> FinancialCalculator [label=inherits arrowhead=empty color=blue fontcolor=blue penwidth=2 style=dashed]
	"add_abhik (double (double, double))" [fillcolor=lightgreen shape=ellipse style=filled]
	Calculator -> "add_abhik (double (double, double))" [label=defines]
	"subtract_abhik (double (double, double))" [fillcolor=lightgreen shape=ellipse style=filled]
	Calculator -> "subtract_abhik (double (double, double))" [label=defines]
	"multiply_abhik (double (double, double))" [fillcolor=lightgreen shape=ellipse style=filled]
	Calculator -> "multiply_abhik (double (double, double))" [label=defines]
	"divide_abhik (double (double, double))" [fillcolor=lightgreen shape=ellipse style=filled]
	Calculator -> "divide_abhik (double (double, double))" [label=defines]
	"power_abhik (double (double, double))" [fillcolor=lightgreen shape=ellipse style=filled]
	AdvancedCalculator -> "power_abhik (double (double, double))" [label=defines]
	"sqrt_abhik (double (double))" [fillcolor=lightgreen shape=ellipse style=filled]
	AdvancedCalculator -> "sqrt_abhik (double (double))" [label=defines]
	"log_abhik (double (double))" [fillcolor=lightgreen shape=ellipse style=filled]
	AdvancedCalculator -> "log_abhik (double (double))" [label=defines]
	"swap (void (unordered_map<_Kty, _Ty, _Hasher, _Keyeq, _Alloc> &) noexcept(noexcept(_Mybase::swap(_Right))))" [fillcolor=lightgreen shape=ellipse style=filled]
	unordered_map -> "swap (void (unordered_map<_Kty, _Ty, _Hasher, _Keyeq, _Alloc> &) noexcept(noexcept(_Mybase":"":swap(_Right)))) [label=defines]
	"insert (pair<iterator, bool> (_Valty &&))" [fillcolor=lightgreen shape=ellipse style=filled]
	unordered_map -> "insert (pair<iterator, bool> (_Valty &&))" [label=defines]
	"try_emplace (pair<iterator, bool> (const key_type &, _Mappedty &&...))" [fillcolor=lightgreen shape=ellipse style=filled]
	unordered_map -> "try_emplace (pair<iterator, bool> (const key_type &, _Mappedty &&...))" [label=defines]
	"insert_or_assign (pair<iterator, bool> (const key_type &, _Mappedty &&))" [fillcolor=lightgreen shape=ellipse style=filled]
	unordered_map -> "insert_or_assign (pair<iterator, bool> (const key_type &, _Mappedty &&))" [label=defines]
	"hash_function (hasher () const)" [fillcolor=lightgreen shape=ellipse style=filled]
	unordered_map -> "hash_function (hasher () const)" [label=defines]
	"key_eq (key_equal () const)" [fillcolor=lightgreen shape=ellipse style=filled]
	unordered_map -> "key_eq (key_equal () const)" [label=defines]
	"at (mapped_type &(const key_type &))" [fillcolor=lightgreen shape=ellipse style=filled]
	unordered_map -> "at (mapped_type &(const key_type &))" [label=defines]
	"swap (void (unordered_multimap<_Kty, _Ty, _Hasher, _Keyeq, _Alloc> &) noexcept(noexcept(_Mybase::swap(_Right))))" [fillcolor=lightgreen shape=ellipse style=filled]
	unordered_multimap -> "swap (void (unordered_multimap<_Kty, _Ty, _Hasher, _Keyeq, _Alloc> &) noexcept(noexcept(_Mybase":"":swap(_Right)))) [label=defines]
	"insert (iterator (_Valty &&))" [fillcolor=lightgreen shape=ellipse style=filled]
	unordered_multimap -> "insert (iterator (_Valty &&))" [label=defines]
	"hash_function (hasher () const)" [fillcolor=lightgreen shape=ellipse style=filled]
	unordered_multimap -> "hash_function (hasher () const)" [label=defines]
	"key_eq (key_equal () const)" [fillcolor=lightgreen shape=ellipse style=filled]
	unordered_multimap -> "key_eq (key_equal () const)" [label=defines]
	"convert (double (double, const std::string &, const std::string &))" [fillcolor=lightgreen shape=ellipse style=filled]
	CurrencyConverter -> "convert (double (double, const std":"":string &, const std::string &)) [label=defines]
	"calculateEMI (double (double, double, int))" [fillcolor=lightgreen shape=ellipse style=filled]
	LoanCalculator -> "calculateEMI (double (double, double, int))" [label=defines]
	"calculateSimpleInterest (double (double, double, double))" [fillcolor=lightgreen shape=ellipse style=filled]
	InterestCalculator -> "calculateSimpleInterest (double (double, double, double))" [label=defines]
	"calculateCompoundInterest (double (double, double, double, int))" [fillcolor=lightgreen shape=ellipse style=filled]
	InterestCalculator -> "calculateCompoundInterest (double (double, double, double, int))" [label=defines]
	"calculateTax (double (double, double))" [fillcolor=lightgreen shape=ellipse style=filled]
	TaxCalculator -> "calculateTax (double (double, double))" [label=defines]
	"applyDiscount (double (double, double))" [fillcolor=lightgreen shape=ellipse style=filled]
	TaxCalculator -> "applyDiscount (double (double, double))" [label=defines]
	"computeEMI (double (double, double, int))" [fillcolor=lightgreen shape=ellipse style=filled]
	FinancialCalculator -> "computeEMI (double (double, double, int))" [label=defines]
	"computeSimpleInterest (double (double, double, double))" [fillcolor=lightgreen shape=ellipse style=filled]
	FinancialCalculator -> "computeSimpleInterest (double (double, double, double))" [label=defines]
	"computeCompoundInterest (double (double, double, double, int))" [fillcolor=lightgreen shape=ellipse style=filled]
	FinancialCalculator -> "computeCompoundInterest (double (double, double, double, int))" [label=defines]
	"computeTax (double (double, double))" [fillcolor=lightgreen shape=ellipse style=filled]
	FinancialCalculator -> "computeTax (double (double, double))" [label=defines]
	"convertCurrency (double (double, const std::string &, const std::string &))" [fillcolor=lightgreen shape=ellipse style=filled]
	FinancialCalculator -> "convertCurrency (double (double, const std":"":string &, const std::string &)) [label=defines]
}
